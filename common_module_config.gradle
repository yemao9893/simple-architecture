if (isBuildModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'kotlin-kapt'

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}
android {
    compileSdk rootProject.ext.android["compileSdkVersion"]

    defaultConfig {
        minSdk rootProject.ext.android["minSdkVersion"]
        targetSdk rootProject.ext.android["targetSdkVersion"]
        versionCode VERSION_CODE as int
        versionName VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    sourceSets {
        main {
            if (isBuildModule.toBoolean()) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/release/AndroidManifest.xml'
                //集成开发模式下排除debug文件夹中的java所有文件（kt 文件无效）
                java {
                    exclude '/debug/**'
                }
            }
        }
    }
    dataBinding {
        enabled = true
    }
}


dependencies {

    rootProject.ext.androidDefaultDependencies.each {
        k, v -> implementation v
    }
    testImplementation rootProject.ext.test["junit"]
    androidTestImplementation rootProject.ext.test["ext"]
    androidTestImplementation rootProject.ext.test["espresso"]
    implementation project(path: ':libViewFrame')

    implementation rootProject.ext.dependencies.arouter_api
    kapt rootProject.ext.dependencies.arouter_compiler
}